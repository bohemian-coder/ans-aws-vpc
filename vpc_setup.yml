---
- name: Set up VPC network to host EC2s
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Import VPC variables
      ansible.builtin.include_vars: vars/vpc_setup

    - name: Create project VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: true
        dns_hostnames: true
        tenancy: default
        state: "{{ state }}"
      register: vpcout

#    - debug:
#        var: vpcout

    - name: Create public subnet 1 in zone 1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-pubsub1
      register: pubsub1_out

    - name: Create public subnet 2 in zone 2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-pubsub2
      register: pubsub2_out

    - name: Create public subnet 3 in zone 3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-pubsub3
      register: pubsub3_out

    - name: Create private subnet 1 in zone 1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-privsub1
      register: privsub1_out

    - name: Create private subnet 2 in zone 2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-privsub2
      register: privsub2_out

    - name: Create private subnet 3 in zone 3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        map_public: true
        resource_tags:
          Name: aav-privsub3
      register: privsub3_out

    - name: Internet Gateway setup
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: aav-IGW
      register: igw_out

    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        resource_tags:
          Name: aav-pubRT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: publicrt_out

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      amazon.aws.ec2_vpc_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: true
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: natgw_out

    # - debug:
    #     var: natgw_out

    - name: Set up private subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: aav-privRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ natgw_out.nat_gateway_id }}"
      register: privrt_out

    - name: List all registered variables to create output file
      ansible.builtin.debug:
        var: "{{ item }}"

      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - publicrt_out.route_table.id
        - natgw_out.nat_gateway_id
        - privrt_out.route_table.id

    - name: Create variables vile for VPC output
      ansible.builtin.copy:
        content: "vpcid: {{ vpcout.vpc.id }}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\n
          pubsub3id: {{ pubsub3_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\n
          privsub2id: {{ privsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\n
          pubRTid: {{ publicrt_out.route_table.id }}\nNATGWid: {{ natgw_out.nat_gateway_id }}\nprivRTid: {{ privrt_out.route_table.id }}\n"
        dest: vars/output_vars
        mode: "0600"
